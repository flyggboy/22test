.section .text
.syntax unified

.global aes_encrypt

aes_encrypt:
    push {r4, r5, r6, r7, lr}

    ldr r4, [r0]        @ r4 = plaintext[0]
    ldr r5, [r0, #4]    @ r5 = plaintext[4]
    ldr r6, [r1]        @ r6 = key[0]
    ldr r7, [r1, #4]    @ r7 = key[4]

    @ Perform AddRoundKey
    eor r4, r4, r6
    eor r5, r5, r7

    @ Perform SubBytes
    bl sub_bytes

    @ Perform ShiftRows
    bl shift_rows

    @ Perform MixColumns
    bl mix_columns

    @ Perform AddRoundKey
    ldr r6, [r1, #8]    @ r6 = key[8]
    ldr r7, [r1, #12]   @ r7 = key[12]
    eor r4, r4, r6
    eor r5, r5, r7

    @ Store the encrypted data
    str r4, [r2]
    str r5, [r2, #4]

    pop {r4, r5, r6, r7, pc}


sub_bytes:
    @ SubBytes lookup table
    ldr r3, =sbox

    @ SubBytes for r4
    ldrb r0, [r4]
    ldr r1, [r3, r0]
    mov r4, r1

    @ SubBytes for r5
    ldrb r0, [r5]
    ldr r1, [r3, r0]
    mov r5, r1

    bx lr


shift_rows:
    @ ShiftRows for r4
    lsr r0, r4, #8
    lsl r1, r4, #24
    orr r4, r0, r1

    @ ShiftRows for r5
    lsr r0, r5, #16
    lsl r1, r5, #16
    orr r5, r0, r1

    @ Rotate r5 to the right by 8 bits
    ror r5, r5, #8

    bx lr


mix_columns:
    @ MixColumns for r4
    push {r0-r3}
    mov r0, r4
    lsr r1, r4, #8
    lsl r2, r4, #16
    lsr r3, r4, #24
    eor r4, r0, r1
    eor r4, r4, r2
    eor r4, r4, r3
    eor r4, r4, lsr #31
    eors r4, r4
    pop {r0-r3}

    @ MixColumns for r5
    push {r0-r3}
    mov r0, r5
    lsl r1, r5, #8
    lsr r2, r5, #16
    lsl r3, r5, #24
    eor r5, r0, r1
    eor r5, r5, r2
    eor r5, r5, r3
    eor r5, r5, lsr #31
    eors r5, r5
    pop {r0-r3}

    bx lr


.section .data
.align 4
sbox:
    .byte 0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5
    .byte 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76
    .byte 0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0
    .byte 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0
    .byte 0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC
    .byte 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15
    .byte 0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A
    .byte 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75
    .byte 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0
    .byte 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84
    .byte 0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B
    .byte 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF
    .byte 0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85
    .byte 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8
    .byte 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5
    .byte 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2
    .byte 0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17
    .byte 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73
    .byte 0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88
    .byte 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB
    .byte 0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C
    .byte 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79
    .byte 0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9
    .byte 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08
    .byte 0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6
    .byte 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A
    .byte 0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E
    .byte 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E
    .byte 0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94
    .byte 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF
    .byte 0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68
    .byte 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16
